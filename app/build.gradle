apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'bugly'

def supportVersion = "26.1.0"
def anko_version = "0.10.1"

// 读取定义的属性
def props = new Properties()
project.rootProject.file("local.properties").withInputStream { props.load(it) }

def KEY_ALIAS = props.getProperty("KEY_ALIAS")
def KEY_PASSWORD = props.getProperty("KEY_PASSWORD")
def STORE_FILE = props.getProperty("STORE_FILE")
def STORE_PASSWORD = props.getProperty("STORE_PASSWORD")

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId "com.linheimx.zimudog"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 5
        versionName "1.0.7"
        vectorDrawables.useSupportLibrary = true
        ndk {
            abiFilters 'armeabi' // , 'x86' //, 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }
    signingConfigs {//签名
        release {
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
            storeFile file(STORE_FILE)
            storePassword STORE_PASSWORD
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    tasks.whenTaskAdded { task ->
        if (task.name.contains("lint")//如果instant run不生效，把clean这行干掉
                || task.name.equals("clean")//项目中有用到aidl则不可以舍弃这个任务
                || task.name.contains("Aidl")//用不到测试的时候就可以先关闭
                || task.name.contains("mockableAndroidJar")
                || task.name.contains("UnitTest")
                || task.name.contains("AndroidTest")//用不到NDK和JNI的也关闭掉
//                || task.name.contains("Ndk")
//                || task.name.contains("Jni")
        ) {
            task.enabled = false
        }
    }
}


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':lcustom')
    compile "com.android.support:design:$supportVersion"
    compile "com.android.support:appcompat-v7:$supportVersion"
    compile "com.android.support:support-v4:$supportVersion"
    compile "com.android.support:recyclerview-v7:$supportVersion"
    compile "com.android.support:support-vector-drawable:$supportVersion"

    compile "org.jetbrains.anko:anko:$anko_version"
    compile "org.jetbrains.anko:anko-commons:$anko_version"

    compile 'com.airbnb.android:lottie:2.0.0-beta4'
    compile 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.4@aar'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'com.squareup.retrofit2:retrofit:2.2.0'
    compile 'io.reactivex.rxjava2:rxjava:2.0.8'
    compile 'com.squareup.retrofit2:converter-gson:2.2.0'
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.6.0'
    compile 'org.jsoup:jsoup:1.10.2'
    compile 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.15'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.github.GrenderG:Toasty:1.2.3'
    compile 'com.github.rubensousa:bottomsheetbuilder:1.6.0'
    compile 'de.hdodenhof:circleimageview:2.1.0'
    compile 'com.github.GrenderG:Prefs:1.3'
    compile 'com.zzhoujay.richtext:richtext:2.5.4'
    annotationProcessor "com.jakewharton:butterknife-compiler:8.5.1"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    compile 'com.liulishuo.filedownloader:library:1.6.8'
}
repositories {
    mavenCentral()
    google()
}
